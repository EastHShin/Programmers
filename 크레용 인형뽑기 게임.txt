import java.util.Stack;

class Solution {
    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        Stack<Integer> stack = new Stack<>();
        int i,j,k;
        int moveLen = moves.length;
        int boardLen = board.length;
        int data1 =0, data2 = 0;
        for(i=0; i<moveLen;i++){
            int movePointer = moves[i] - 1;
            for(j=0; j < boardLen; j++){
                if(board[j][movePointer] != 0){
                    if(stack.size() == 0){
                        stack.push(board[j][movePointer]);
                        board[j][movePointer] = 0;
                        break;
                    }
                    else{
                    data1 = stack.peek();
                    stack.push(board[j][movePointer]);
                    board[j][movePointer] = 0;
                    data2 = stack.peek();
                    break;
                    }
                }  //endif     
            }//jfor
           if(stack.size() > 1 && data1 == data2){
             stack.pop();
             stack.pop();
             answer += 2;
           } 
        }//ifor
        return answer;
    }
}